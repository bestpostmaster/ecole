<?php

namespace App\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoteEleveRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Supprimer toutes les notes d'un elève
     * @param int $id_eleve
     * @return array|bool
     */
    public function removeStudentMarks (int $id_eleve)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->delete();
        $qb->where('a.id_eleve = '.$id_eleve);
        $query = $qb->getQuery();
        return $query->getResult();
    }

    /**
     * Supprimer toutes les associations d'une note
     * @param int $id_note
     * @return array|bool
     */
    public function removeAssoc (int $id_note)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->delete();
        $qb->where('a.id_note = '.$id_note);
        $query = $qb->getQuery();
        return $query->getResult();
    }

    /**
     * Vérifier si une note est en double
     * @param int $id_note
     * @param int $id_eleve
     * @return array|bool
     */
    public function duplicateMarkStudent (int $id_note, int $id_eleve)
    {
        if ($this->findBy(['id_note' => $id_note, 'id_eleve' => $id_eleve]))
            return true;
        else
            return false;
    }

    /**
     * Récupérer toutes les notes d'un élève
     * @param int $id_eleve
     * @return array|bool
     */
    public function getMarks (int $id_eleve)
    {
        if ($notes = $this->findBy(['id_eleve' => $id_eleve]))
            return $notes;
        else
            return false;
    }

    /**
     * Calculer la moyenne d'un élève
     * @param int $idEleve
     * @return bool|mixed
     * @throws \Doctrine\DBAL\Exception
     */
    public function getStudentAvg (int $idEleve)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = 'SELECT AVG(valeur)
            FROM notes
            LEFT JOIN noteeleve ON notes.id = noteeleve.id_note
            WHERE noteeleve.id_eleve = '.$idEleve;
        $rows = $conn->query($sql);
        if (isset($rows->fetchAll()[0]['AVG(valeur)']))
            return $rows->fetchAll()[0]['AVG(valeur)'];
        else
            return false;
    }
}
